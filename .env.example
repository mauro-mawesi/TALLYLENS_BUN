# Server Configuration
NODE_ENV=development
PORT=3000

# Database Configuration
DATABASE_URL=postgresql://user:password@localhost:5432/receipts_db
DB_LOGGING=false
DB_SSL=true

# External APIs
OPENROUTER_API_KEY=your_openrouter_api_key_here
GOOGLE_APPLICATION_CREDENTIALS=path/to/google-credentials.json

# Document Processor Microservice (Python OpenCV)
DOCUMENT_PROCESSOR_URL=http://document-processor:5000
# Enable OpenCV perspective correction processing (default: false)
# Set to true only if you have the Python OpenCV microservice running
ENABLE_OPENCV_PROCESSING=false

# Security - IMPORTANT: Generate strong secrets for production!
# Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your_jwt_secret_min_32_chars_long_change_in_production
JWT_REFRESH_SECRET=your_refresh_secret_min_32_chars_long_change_in_production
# Image signing secret for secure URL generation (CRITICAL for production!)
IMAGE_SECRET=your_image_secret_min_64_chars_long_change_in_production
# Access token: 2 horas (reduce frecuencia de refreshes, mejora UX)
JWT_EXPIRATION=2h
# Refresh token: 60 días (comportamiento tipo Instagram - sesión persistente)
JWT_REFRESH_EXPIRATION=60d
BCRYPT_ROUNDS=12

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# File Upload Configuration
MAX_FILE_SIZE=5242880
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/jpg
UPLOAD_DIR=uploads

# Redis Configuration (Optional - for caching)
# REDIS_URL=redis://localhost:6379
# CACHE_TTL=3600

# Logging
LOG_LEVEL=info
LOG_DIR=logs

# CORS Configuration
CORS_ORIGIN=*

# Session Secret
SESSION_SECRET=your_session_secret_change_in_production

# Monitoring (Optional)
# SENTRY_DSN=your_sentry_dsn
# NEW_RELIC_LICENSE_KEY=your_new_relic_key